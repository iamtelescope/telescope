apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "telescope.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "telescope.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "telescope.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "telescope.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.initContainers.migrations.enabled }}
      initContainers:
        - name: migrations
          image: "{{ .Values.initContainers.migrations.image.repository | default .Values.image.repository }}:{{ .Values.initContainers.migrations.image.tag | default (.Values.image.tag | default .Chart.AppVersion) }}"
          imagePullPolicy: {{ .Values.initContainers.migrations.image.pullPolicy | default .Values.image.pullPolicy }}
          command:
            {{- range .Values.initContainers.migrations.command }}
            - {{ . | quote }}
            {{- end }}
          env:
            - name: TELESCOPE_CONFIG_FILE
              value: "/etc/telescope/config.yaml"
          envFrom:
            - secretRef:
                name: {{ .Values.secretName }}
          volumeMounts:
            - name: config
              mountPath: /etc/telescope
              readOnly: true
            {{- if eq .Values.database.type "sqlite" }}
            - name: sqlite-data
              mountPath: /app/data
            {{- end }}
          resources:
            {{- toYaml .Values.initContainers.migrations.resources | nindent 12 }}
      {{- end }}
      containers:
        - name: telescope
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion}}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: TELESCOPE_CONFIG_FILE
              value: "/etc/telescope/config.yaml"
          envFrom:
            - secretRef:
                name: {{ .Values.secretName }}
          volumeMounts:
            - name: config
              mountPath: /etc/telescope
              readOnly: true
            {{- if eq .Values.database.type "sqlite" }}
            - name: sqlite-data
              mountPath: /app/data
            {{- end }}
          ports:
            - containerPort: {{ .Values.listenPort }}
              name: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.listenPort }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.listenPort }}
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 3
      volumes:
        - name: config
          configMap:
            name: {{ include "telescope.fullname" . }}-config
        {{- if eq .Values.database.type "sqlite" }}
        - name: sqlite-data
          {{- if .Values.database.sqlite.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "telescope.fullname" . }}-sqlite
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- end }}